apply plugin: 'checkstyle'

checkstyle {
    configFile file("${rootDir}/config/codestyle/codestyle.xml")
    configProperties = ['checkstyle.java.header': file("${rootDir}/config/codestyle/java.header").getAbsolutePath()]
    toolVersion = "6.11.2"
}

task checkAllSource(type: Checkstyle) {
    source 'src/main/java'
    include '**/*.java'
    exclude '**/model/**'
    exclude '**/AppLogger.java'
    classpath = project.configurations.compile
}

task failOnCheckstyleWarning {
    def checkstyleWarningsFile = "${buildDir}/reports/checkstyle/checkAllSource.xml"
    def intro = "There were checkstyle warnings. For more details check: "
    def line = "------------------------------------------------------------------------------------------------"
}

/*
 * Copyright (C) 2017  Gowtham Parimelazhagan.
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Affero General Public License as published
 *     by the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Affero General Public License for more details.
 *
 *     You should have received a copy of the GNU Affero General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

// ensure that there are no style warnings
failOnCheckstyleWarning.dependsOn checkAllSource

// run checkstyle as part of the standard set of checks
check.dependsOn failOnCheckstyleWarning
